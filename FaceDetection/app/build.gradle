import com.android.build.gradle.tasks.NdkCompile
apply plugin: 'com.android.application'

android {
    compileSdkVersion 14
    buildToolsVersion "23.0.2"

    defaultConfig {
        applicationId "com.wade.myfacedetection"
        minSdkVersion 14
        targetSdkVersion 22
        versionCode 111
        versionName "1.1.1"
        ndk {moduleName "detection_based_tracker"}
    }

    sourceSets.main {
        jniLibs.srcDir 'src/main/libs' //set .so files location to libs
        jni.srcDirs = [] //Disable automatic ndk-build call
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    task ndkBuild(type: Exec) {
        def ndkDir = android.ndkDirectory
        commandLine "$ndkDir/ndk-build",
                'NDK_PROJECT_PATH=build',
                'APP_BUILD_SCRIPT=src/main/jni/Android.mk',
                'NDK_APPLICATION_MK=src/main/jni/Application.mk',
                'NDK_APP_LIBS_OUT = src/main/libs'
    }
    task cleanNative(type: Exec, description: 'Clean JNI object files') {
        def ndkDir = android.ndkDirectory
        commandLine "$ndkDir/ndk-build",
                '-C', file('src/main/jni').absolutePath, // Change src/main/jni the relative path to your jni source
                'clean'
    }

    clean.dependsOn 'cleanNative'

    tasks.withType(JavaCompile) {
        compileTask -> compileTask.dependsOn ndkBuild
    }
}

dependencies {
    compile fileTree(dir: 'libs')
    compile project(':libraries:opencv')
    // compile 'org.bytedeco.javacpp-presets:opencv:3.0.0-1.1'
}
